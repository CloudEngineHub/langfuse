# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json
imports:
  pagination: ./utils/pagination.yml
  commons: ./commons.yml
service:
  auth: true
  base-path: /api/public
  endpoints:
    batch:
      docs: Ingest multiple events to Langfuse
      method: POST
      path: /ingestion
      request:
        name: IngestionRequest
        body:
          properties:
            batch: list<IngestionEvent>
      response: IngestionResponse # will be reportet as 200 response, but endpoint returns 207

types:
  IngestionEvent:
    discriminant: "type"
    union:
      trace-create: TraceEvent
      score-create: ScoreEvent
      observation-create: ObservationCreateEvent
      observation-update: ObservationUpdateEvent

  ObservationEvent:
    properties:
      id: string
      traceId: optional<string>
      type: string
      name: optional<string>
      startTime: optional<datetime>
      endTime: optional<datetime>
      completionStartTime: optional<datetime>
      model: optional<string>
      modelParameters: optional<map<string, commons.MapValue>>
      input: optional<unknown>
      version: optional<string>
      metadata: optional<unknown>
      output: optional<unknown>
      usage: optional<commons.Usage>
      level: optional<commons.ObservationLevel>
      statusMessage: optional<string>
      parentObservationId: optional<string>
  CreateTraceRequest:
    properties:
      id: optional<string>
      name: optional<string>
      userId: optional<string>
      input: optional<unknown>
      output: optional<unknown>
      sessionId: optional<string>
      release: optional<string>
      version: optional<string>
      metadata: optional<unknown>
      public:
        type: optional<boolean>
        docs: Make trace publicly accessible via url

  TraceEvent:
    properties:
      id: string
      timestamp: string
      body: CreateTraceRequest
  ObservationCreateEvent:
    properties:
      id: string
      timestamp: string
      body: ObservationEvent
  ObservationUpdateEvent:
    properties:
      id: string
      timestamp: string
      body: ObservationEvent
  ScoreEvent:
    properties:
      id: string
      timestamp: string
      body: commons.Score
  IngestionSuccess:
    properties:
      id: string
      status: integer
  IngestionError:
    properties:
      id: string
      status: integer
      message: optional<string>
      error: optional<unknown>
  IngestionResponse:
    properties:
      successes: list<IngestionSuccess>
      errors: list<IngestionError>
